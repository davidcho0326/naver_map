{"ast":null,"code":"var _jsxFileName = \"C:\\\\python\\\\venv\\\\naver-map-chat\\\\frontend\\\\src\\\\components\\\\NaverMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport './NaverMap.css';\nimport DirectionsSearch from './DirectionsSearch';\nimport DirectionsResult from './DirectionsResult';\nimport './DirectionsSearch.css';\nimport './DirectionsResult.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverMap = ({\n  searchResult,\n  userLocation\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  const userMarkerRef = useRef(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [mapError, setMapError] = useState(null);\n\n  // 길찾기 관련 상태\n  const [directions, setDirections] = useState(null);\n  const [directionsPolyline, setDirectionsPolyline] = useState(null);\n  const [showDirectionsPanel, setShowDirectionsPanel] = useState(false);\n  const [directionsMarkers, setDirectionsMarkers] = useState([]);\n\n  // 사용자 위치 마커 업데이트\n  const updateUserLocationMarker = useCallback(() => {\n    if (!mapInstanceRef.current || !userLocation) return;\n    const position = new window.naver.maps.LatLng(userLocation.lat, userLocation.lng);\n\n    // 이전 사용자 위치 마커 제거\n    if (userMarkerRef.current) {\n      userMarkerRef.current.setMap(null);\n    }\n\n    // 사용자 위치 마커 생성\n    userMarkerRef.current = new window.naver.maps.Marker({\n      position,\n      map: mapInstanceRef.current,\n      icon: {\n        content: '<div class=\"user-location-marker\"></div>',\n        anchor: new window.naver.maps.Point(15, 15)\n      },\n      title: '내 위치'\n    });\n\n    // 검색 결과가 없을 때만 사용자 위치로 지도 이동\n    if (!searchResult && !showDirectionsPanel) {\n      mapInstanceRef.current.setCenter(position);\n      mapInstanceRef.current.setZoom(16);\n    }\n  }, [userLocation, searchResult, showDirectionsPanel]);\n\n  // 지도 결과 업데이트 함수\n  const updateMapWithSearchResult = useCallback(() => {\n    if (!searchResult || !mapInstanceRef.current) return;\n\n    // 기존 길찾기 정보 제거\n    clearDirections();\n\n    // 길찾기 결과인 경우\n    if (searchResult.status === 'DIRECTIONS_RESULT' && searchResult.directions) {\n      displayDirections(searchResult);\n      return;\n    }\n\n    // 일반 검색 결과 처리 (기존 코드)\n    const {\n      x,\n      y,\n      address,\n      query,\n      additionalInfo\n    } = searchResult;\n    if (!x || !y) return;\n    const position = new window.naver.maps.LatLng(y, x);\n\n    // 지도 중심 이동\n    mapInstanceRef.current.setCenter(position);\n    mapInstanceRef.current.setZoom(16);\n\n    // 이전 마커 제거\n    if (markerRef.current) {\n      markerRef.current.setMap(null);\n    }\n\n    // 새 마커 생성\n    markerRef.current = new window.naver.maps.Marker({\n      position,\n      map: mapInstanceRef.current,\n      title: query\n    });\n\n    // 정보 창 생성\n    const infoWindow = new window.naver.maps.InfoWindow({\n      content: `\n        <div class=\"info-window\">\n          <h3>${query}</h3>\n          <p>${address}</p>\n          ${additionalInfo ? `\n            <div class=\"additional-info\">\n              <p class=\"info-title\">추가 정보</p>\n              <p class=\"info-content\">${additionalInfo}</p>\n            </div>\n          ` : ''}\n        </div>\n      `,\n      maxWidth: 300,\n      backgroundColor: \"#fff\",\n      borderColor: \"#5347AA\",\n      borderWidth: 2,\n      anchorSize: new window.naver.maps.Size(10, 10),\n      anchorColor: \"#fff\",\n      pixelOffset: new window.naver.maps.Point(10, -10)\n    });\n\n    // 마커 클릭 시 정보 창 표시\n    window.naver.maps.Event.addListener(markerRef.current, 'click', () => {\n      if (infoWindow.getMap()) {\n        infoWindow.close();\n      } else {\n        infoWindow.open(mapInstanceRef.current, markerRef.current);\n      }\n    });\n\n    // 정보 창 자동 표시\n    infoWindow.open(mapInstanceRef.current, markerRef.current);\n  }, [searchResult]);\n\n  // 길찾기 결과 표시\n  const displayDirections = result => {\n    if (!mapInstanceRef.current || !result.directions || !result.directions.route) return;\n    const {\n      directions,\n      start_location,\n      end_location\n    } = result;\n\n    // 경로가 있는지 확인\n    if (directions.route && directions.route.traoptimal && directions.route.traoptimal[0]) {\n      const pathCoordinates = directions.route.traoptimal[0].path;\n\n      // 기존 경로 제거\n      clearDirections();\n\n      // 새 경로 그리기\n      const path = pathCoordinates.map(coord => new window.naver.maps.LatLng(coord[1], coord[0]));\n      const polyline = new window.naver.maps.Polyline({\n        map: mapInstanceRef.current,\n        path: path,\n        strokeColor: '#5347AA',\n        strokeWeight: 5,\n        strokeOpacity: 0.8\n      });\n      setDirectionsPolyline(polyline);\n\n      // 출발지와 도착지 마커 추가\n      const newMarkers = [];\n\n      // 출발지 마커\n      const startMarker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(start_location.y, start_location.x),\n        map: mapInstanceRef.current,\n        icon: {\n          content: '<div class=\"start-location-marker\">출발</div>',\n          anchor: new window.naver.maps.Point(15, 30)\n        },\n        title: start_location.name\n      });\n      newMarkers.push(startMarker);\n\n      // 출발지 정보창\n      const startInfoWindow = new window.naver.maps.InfoWindow({\n        content: `\n          <div class=\"info-window\">\n            <h3>출발: ${start_location.name}</h3>\n            <p>${start_location.address}</p>\n          </div>\n        `,\n        maxWidth: 300,\n        backgroundColor: \"#fff\",\n        borderColor: \"#5347AA\",\n        borderWidth: 2\n      });\n      startInfoWindow.open(mapInstanceRef.current, startMarker);\n\n      // 도착지 마커\n      const endMarker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(end_location.y, end_location.x),\n        map: mapInstanceRef.current,\n        icon: {\n          content: '<div class=\"end-location-marker\">도착</div>',\n          anchor: new window.naver.maps.Point(15, 30)\n        },\n        title: end_location.name\n      });\n      newMarkers.push(endMarker);\n\n      // 도착지 정보창\n      const endInfoWindow = new window.naver.maps.InfoWindow({\n        content: `\n          <div class=\"info-window\">\n            <h3>도착: ${end_location.name}</h3>\n            <p>${end_location.address}</p>\n          </div>\n        `,\n        maxWidth: 300,\n        backgroundColor: \"#fff\",\n        borderColor: \"#5347AA\",\n        borderWidth: 2\n      });\n      endInfoWindow.open(mapInstanceRef.current, endMarker);\n      setDirectionsMarkers(newMarkers);\n\n      // 경로 전체가 보이도록 지도 영역 조정\n      const bounds = new window.naver.maps.LatLngBounds();\n      path.forEach(coord => bounds.extend(coord));\n      mapInstanceRef.current.fitBounds(bounds);\n    }\n  };\n\n  // 경로 지우기\n  const clearDirections = () => {\n    if (directionsPolyline) {\n      directionsPolyline.setMap(null);\n      setDirectionsPolyline(null);\n    }\n    directionsMarkers.forEach(marker => {\n      marker.setMap(null);\n    });\n    setDirectionsMarkers([]);\n  };\n\n  // 초기 맵 로드\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=07gq168p3y`;\n    script.async = true;\n    script.onload = () => {\n      try {\n        // 스크립트가 로드된 후 초기화\n        if (window.naver && window.naver.maps) {\n          const mapOptions = {\n            center: new window.naver.maps.LatLng(37.3595704, 127.105399),\n            zoom: 15,\n            zoomControl: true,\n            zoomControlOptions: {\n              position: window.naver.maps.Position.TOP_RIGHT\n            }\n          };\n          mapInstanceRef.current = new window.naver.maps.Map(mapRef.current, mapOptions);\n          setMapLoaded(true);\n          console.log(\"네이버 지도가 성공적으로 로드되었습니다.\");\n        } else {\n          console.error(\"네이버 지도 API가 로드되지 않았습니다.\");\n          setMapError(\"지도를 로드할 수 없습니다.\");\n        }\n      } catch (error) {\n        console.error(\"지도 초기화 중 오류:\", error);\n        setMapError(\"지도 초기화 중 오류가 발생했습니다.\");\n      }\n    };\n    script.onerror = e => {\n      console.error(\"네이버 지도 스크립트 로드 실패:\", e);\n      setMapError(\"지도 스크립트를 로드할 수 없습니다. API 키를 확인하세요.\");\n    };\n    document.head.appendChild(script);\n    return () => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n    };\n  }, []);\n\n  // 사용자 위치 변경 시 지도 업데이트\n  useEffect(() => {\n    if (mapLoaded && userLocation) {\n      updateUserLocationMarker();\n    }\n  }, [mapLoaded, userLocation, updateUserLocationMarker]);\n\n  // 검색 결과 변경 시 지도 업데이트\n  useEffect(() => {\n    if (mapLoaded && searchResult) {\n      updateMapWithSearchResult();\n    }\n  }, [mapLoaded, searchResult, updateMapWithSearchResult]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"naver-map\",\n      id: \"map\",\n      children: [!searchResult && !userLocation && !mapError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uB124\\uC774\\uBC84 \\uC9C0\\uB3C4 \\uAC80\\uC0C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC624\\uB978\\uCABD \\uCC44\\uD305\\uCC3D\\uC5D0 \\uC7A5\\uC18C \\uC774\\uB984\\uC774\\uB098 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC704\\uCE58 \\uAE30\\uBC18 \\uAC80\\uC0C9\\uC744 \\uC704\\uD574 \\uC704\\uCE58 \\uC815\\uBCF4 \\uACF5\\uC720\\uB97C \\uD5C8\\uC6A9\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), mapError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-error-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC9C0\\uB3C4 \\uB85C\\uB4DC \\uC624\\uB958\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: mapError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"directions-container\",\n      children: /*#__PURE__*/_jsxDEV(DirectionsSearch, {\n        onSearch: handleDirectionsSearch,\n        userLocation: userLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), showDirectionsPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"directions-panel\",\n      children: /*#__PURE__*/_jsxDEV(DirectionsResult, {\n        directions: directions,\n        onClose: handleCloseDirections\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverMap, \"ZRI2v2ZY0dItfKJ3lpHGw/GiJPo=\");\n_c = NaverMap;\nexport default NaverMap;\nvar _c;\n$RefreshReg$(_c, \"NaverMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","DirectionsSearch","DirectionsResult","jsxDEV","_jsxDEV","NaverMap","searchResult","userLocation","_s","mapRef","mapInstanceRef","markerRef","userMarkerRef","mapLoaded","setMapLoaded","mapError","setMapError","directions","setDirections","directionsPolyline","setDirectionsPolyline","showDirectionsPanel","setShowDirectionsPanel","directionsMarkers","setDirectionsMarkers","updateUserLocationMarker","current","position","window","naver","maps","LatLng","lat","lng","setMap","Marker","map","icon","content","anchor","Point","title","setCenter","setZoom","updateMapWithSearchResult","clearDirections","status","displayDirections","x","y","address","query","additionalInfo","infoWindow","InfoWindow","maxWidth","backgroundColor","borderColor","borderWidth","anchorSize","Size","anchorColor","pixelOffset","Event","addListener","getMap","close","open","result","route","start_location","end_location","traoptimal","pathCoordinates","path","coord","polyline","Polyline","strokeColor","strokeWeight","strokeOpacity","newMarkers","startMarker","name","push","startInfoWindow","endMarker","endInfoWindow","bounds","LatLngBounds","forEach","extend","fitBounds","marker","script","document","createElement","src","async","onload","mapOptions","center","zoom","zoomControl","zoomControlOptions","Position","TOP_RIGHT","Map","console","log","error","onerror","e","head","appendChild","parentNode","removeChild","className","children","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","handleDirectionsSearch","onClose","handleCloseDirections","_c","$RefreshReg$"],"sources":["C:/python/venv/naver-map-chat/frontend/src/components/NaverMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport './NaverMap.css';\r\nimport DirectionsSearch from './DirectionsSearch';\r\nimport DirectionsResult from './DirectionsResult';\r\nimport './DirectionsSearch.css';\r\nimport './DirectionsResult.css';\r\n\r\nconst NaverMap = ({ searchResult, userLocation }) => {\r\n  const mapRef = useRef(null);\r\n  const mapInstanceRef = useRef(null);\r\n  const markerRef = useRef(null);\r\n  const userMarkerRef = useRef(null);\r\n  const [mapLoaded, setMapLoaded] = useState(false);\r\n  const [mapError, setMapError] = useState(null);\r\n  \r\n  // 길찾기 관련 상태\r\n  const [directions, setDirections] = useState(null);\r\n  const [directionsPolyline, setDirectionsPolyline] = useState(null);\r\n  const [showDirectionsPanel, setShowDirectionsPanel] = useState(false);\r\n  const [directionsMarkers, setDirectionsMarkers] = useState([]);\r\n\r\n  // 사용자 위치 마커 업데이트\r\n  const updateUserLocationMarker = useCallback(() => {\r\n    if (!mapInstanceRef.current || !userLocation) return;\r\n    \r\n    const position = new window.naver.maps.LatLng(userLocation.lat, userLocation.lng);\r\n    \r\n    // 이전 사용자 위치 마커 제거\r\n    if (userMarkerRef.current) {\r\n      userMarkerRef.current.setMap(null);\r\n    }\r\n    \r\n    // 사용자 위치 마커 생성\r\n    userMarkerRef.current = new window.naver.maps.Marker({\r\n      position,\r\n      map: mapInstanceRef.current,\r\n      icon: {\r\n        content: '<div class=\"user-location-marker\"></div>',\r\n        anchor: new window.naver.maps.Point(15, 15)\r\n      },\r\n      title: '내 위치'\r\n    });\r\n    \r\n    // 검색 결과가 없을 때만 사용자 위치로 지도 이동\r\n    if (!searchResult && !showDirectionsPanel) {\r\n      mapInstanceRef.current.setCenter(position);\r\n      mapInstanceRef.current.setZoom(16);\r\n    }\r\n  }, [userLocation, searchResult, showDirectionsPanel]);\r\n\r\n  // 지도 결과 업데이트 함수\r\n  const updateMapWithSearchResult = useCallback(() => {\r\n    if (!searchResult || !mapInstanceRef.current) return;\r\n\r\n    // 기존 길찾기 정보 제거\r\n    clearDirections();\r\n\r\n    // 길찾기 결과인 경우\r\n    if (searchResult.status === 'DIRECTIONS_RESULT' && searchResult.directions) {\r\n      displayDirections(searchResult);\r\n      return;\r\n    }\r\n\r\n    // 일반 검색 결과 처리 (기존 코드)\r\n    const { x, y, address, query, additionalInfo } = searchResult;\r\n    if (!x || !y) return;\r\n    \r\n    const position = new window.naver.maps.LatLng(y, x);\r\n    \r\n    // 지도 중심 이동\r\n    mapInstanceRef.current.setCenter(position);\r\n    mapInstanceRef.current.setZoom(16);\r\n\r\n    // 이전 마커 제거\r\n    if (markerRef.current) {\r\n      markerRef.current.setMap(null);\r\n    }\r\n\r\n    // 새 마커 생성\r\n    markerRef.current = new window.naver.maps.Marker({\r\n      position,\r\n      map: mapInstanceRef.current,\r\n      title: query\r\n    });\r\n\r\n    // 정보 창 생성\r\n    const infoWindow = new window.naver.maps.InfoWindow({\r\n      content: `\r\n        <div class=\"info-window\">\r\n          <h3>${query}</h3>\r\n          <p>${address}</p>\r\n          ${additionalInfo ? `\r\n            <div class=\"additional-info\">\r\n              <p class=\"info-title\">추가 정보</p>\r\n              <p class=\"info-content\">${additionalInfo}</p>\r\n            </div>\r\n          ` : ''}\r\n        </div>\r\n      `,\r\n      maxWidth: 300,\r\n      backgroundColor: \"#fff\",\r\n      borderColor: \"#5347AA\",\r\n      borderWidth: 2,\r\n      anchorSize: new window.naver.maps.Size(10, 10),\r\n      anchorColor: \"#fff\",\r\n      pixelOffset: new window.naver.maps.Point(10, -10)\r\n    });\r\n\r\n    // 마커 클릭 시 정보 창 표시\r\n    window.naver.maps.Event.addListener(markerRef.current, 'click', () => {\r\n      if (infoWindow.getMap()) {\r\n        infoWindow.close();\r\n      } else {\r\n        infoWindow.open(mapInstanceRef.current, markerRef.current);\r\n      }\r\n    });\r\n\r\n    // 정보 창 자동 표시\r\n    infoWindow.open(mapInstanceRef.current, markerRef.current);\r\n  }, [searchResult]);\r\n\r\n  // 길찾기 결과 표시\r\n  const displayDirections = (result) => {\r\n    if (!mapInstanceRef.current || !result.directions || !result.directions.route) return;\r\n    \r\n    const { directions, start_location, end_location } = result;\r\n    \r\n    // 경로가 있는지 확인\r\n    if (directions.route && directions.route.traoptimal && directions.route.traoptimal[0]) {\r\n      const pathCoordinates = directions.route.traoptimal[0].path;\r\n      \r\n      // 기존 경로 제거\r\n      clearDirections();\r\n      \r\n      // 새 경로 그리기\r\n      const path = pathCoordinates.map(coord => \r\n        new window.naver.maps.LatLng(coord[1], coord[0]));\r\n      const polyline = new window.naver.maps.Polyline({\r\n        map: mapInstanceRef.current,\r\n        path: path,\r\n        strokeColor: '#5347AA',\r\n        strokeWeight: 5,\r\n        strokeOpacity: 0.8\r\n      });\r\n      \r\n      setDirectionsPolyline(polyline);\r\n      \r\n      // 출발지와 도착지 마커 추가\r\n      const newMarkers = [];\r\n      \r\n      // 출발지 마커\r\n      const startMarker = new window.naver.maps.Marker({\r\n        position: new window.naver.maps.LatLng(start_location.y, start_location.x),\r\n        map: mapInstanceRef.current,\r\n        icon: {\r\n          content: '<div class=\"start-location-marker\">출발</div>',\r\n          anchor: new window.naver.maps.Point(15, 30)\r\n        },\r\n        title: start_location.name\r\n      });\r\n      newMarkers.push(startMarker);\r\n      \r\n      // 출발지 정보창\r\n      const startInfoWindow = new window.naver.maps.InfoWindow({\r\n        content: `\r\n          <div class=\"info-window\">\r\n            <h3>출발: ${start_location.name}</h3>\r\n            <p>${start_location.address}</p>\r\n          </div>\r\n        `,\r\n        maxWidth: 300,\r\n        backgroundColor: \"#fff\",\r\n        borderColor: \"#5347AA\",\r\n        borderWidth: 2\r\n      });\r\n      startInfoWindow.open(mapInstanceRef.current, startMarker);\r\n      \r\n      // 도착지 마커\r\n      const endMarker = new window.naver.maps.Marker({\r\n        position: new window.naver.maps.LatLng(end_location.y, end_location.x),\r\n        map: mapInstanceRef.current,\r\n        icon: {\r\n          content: '<div class=\"end-location-marker\">도착</div>',\r\n          anchor: new window.naver.maps.Point(15, 30)\r\n        },\r\n        title: end_location.name\r\n      });\r\n      newMarkers.push(endMarker);\r\n      \r\n      // 도착지 정보창\r\n      const endInfoWindow = new window.naver.maps.InfoWindow({\r\n        content: `\r\n          <div class=\"info-window\">\r\n            <h3>도착: ${end_location.name}</h3>\r\n            <p>${end_location.address}</p>\r\n          </div>\r\n        `,\r\n        maxWidth: 300,\r\n        backgroundColor: \"#fff\",\r\n        borderColor: \"#5347AA\",\r\n        borderWidth: 2\r\n      });\r\n      endInfoWindow.open(mapInstanceRef.current, endMarker);\r\n      \r\n      setDirectionsMarkers(newMarkers);\r\n      \r\n      // 경로 전체가 보이도록 지도 영역 조정\r\n      const bounds = new window.naver.maps.LatLngBounds();\r\n      path.forEach(coord => bounds.extend(coord));\r\n      mapInstanceRef.current.fitBounds(bounds);\r\n    }\r\n  };\r\n  \r\n  // 경로 지우기\r\n  const clearDirections = () => {\r\n    if (directionsPolyline) {\r\n      directionsPolyline.setMap(null);\r\n      setDirectionsPolyline(null);\r\n    }\r\n    \r\n    directionsMarkers.forEach(marker => {\r\n      marker.setMap(null);\r\n    });\r\n    setDirectionsMarkers([]);\r\n  };\r\n\r\n  // 초기 맵 로드\r\n  useEffect(() => {\r\n    const script = document.createElement('script');\r\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=07gq168p3y`;\r\n    script.async = true;\r\n    \r\n    script.onload = () => {\r\n      try {\r\n        // 스크립트가 로드된 후 초기화\r\n        if (window.naver && window.naver.maps) {\r\n          const mapOptions = {\r\n            center: new window.naver.maps.LatLng(37.3595704, 127.105399),\r\n            zoom: 15,\r\n            zoomControl: true,\r\n            zoomControlOptions: {\r\n              position: window.naver.maps.Position.TOP_RIGHT\r\n            }\r\n          };\r\n\r\n          mapInstanceRef.current = new window.naver.maps.Map(mapRef.current, mapOptions);\r\n          setMapLoaded(true);\r\n          console.log(\"네이버 지도가 성공적으로 로드되었습니다.\");\r\n        } else {\r\n          console.error(\"네이버 지도 API가 로드되지 않았습니다.\");\r\n          setMapError(\"지도를 로드할 수 없습니다.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"지도 초기화 중 오류:\", error);\r\n        setMapError(\"지도 초기화 중 오류가 발생했습니다.\");\r\n      }\r\n    };\r\n    \r\n    script.onerror = (e) => {\r\n      console.error(\"네이버 지도 스크립트 로드 실패:\", e);\r\n      setMapError(\"지도 스크립트를 로드할 수 없습니다. API 키를 확인하세요.\");\r\n    };\r\n    \r\n    document.head.appendChild(script);\r\n\r\n    return () => {\r\n      if (script.parentNode) {\r\n        script.parentNode.removeChild(script);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 사용자 위치 변경 시 지도 업데이트\r\n  useEffect(() => {\r\n    if (mapLoaded && userLocation) {\r\n      updateUserLocationMarker();\r\n    }\r\n  }, [mapLoaded, userLocation, updateUserLocationMarker]);\r\n\r\n  // 검색 결과 변경 시 지도 업데이트\r\n  useEffect(() => {\r\n    if (mapLoaded && searchResult) {\r\n      updateMapWithSearchResult();\r\n    }\r\n  }, [mapLoaded, searchResult, updateMapWithSearchResult]);\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <div ref={mapRef} className=\"naver-map\" id=\"map\">\r\n        {!searchResult && !userLocation && !mapError && (\r\n          <div className=\"map-overlay\">\r\n            <div className=\"map-instructions\">\r\n              <h2>네이버 지도 검색</h2>\r\n              <p>오른쪽 채팅창에 장소 이름이나 주소를 입력하세요</p>\r\n              <p>위치 기반 검색을 위해 위치 정보 공유를 허용해주세요</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {mapError && (\r\n          <div className=\"map-error-overlay\">\r\n            <div className=\"map-error\">\r\n              <h2>지도 로드 오류</h2>\r\n              <p>{mapError}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"directions-container\">\r\n        <DirectionsSearch \r\n          onSearch={handleDirectionsSearch} \r\n          userLocation={userLocation}\r\n        />\r\n      </div>\r\n      \r\n      {showDirectionsPanel && (\r\n        <div className=\"directions-panel\">\r\n          <DirectionsResult \r\n            directions={directions} \r\n            onClose={handleCloseDirections}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}