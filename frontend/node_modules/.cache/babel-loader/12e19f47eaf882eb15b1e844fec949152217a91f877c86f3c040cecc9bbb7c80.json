{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haenee\\\\Desktop\\\\naver-map-chat\\\\frontend\\\\src\\\\components\\\\NaverMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './NaverMap.css';\nimport './DirectionsSearch.css';\nimport './DirectionsResult.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverMap = ({\n  searchResult,\n  userLocation\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n\n  // 네이버 지도 API 로드 확인\n  useEffect(() => {\n    const checkMapLoad = () => {\n      if (window.naver && window.naver.maps) {\n        setIsMapLoaded(true);\n      } else {\n        setTimeout(checkMapLoad, 100);\n      }\n    };\n    checkMapLoad();\n  }, []);\n\n  // 지도 초기화\n  useEffect(() => {\n    if (!isMapLoaded || !mapRef.current || !window.naver || !window.naver.maps) return;\n    try {\n      console.log('✅ 네이버 지도 API 로드 성공');\n\n      // ✅ 지도 생성\n      const mapOptions = {\n        center: new window.naver.maps.LatLng(37.5665, 126.9780),\n        zoom: 14,\n        mapTypeControl: false,\n        mapTypeId: window.naver.maps.MapTypeId.NORMAL\n      };\n      const map = new window.naver.maps.Map(mapRef.current, mapOptions);\n\n      // ✅ 사용자 위치 마커 표시\n      if (userLocation) {\n        new window.naver.maps.Marker({\n          position: new window.naver.maps.LatLng(userLocation.lat, userLocation.lng),\n          map: map,\n          icon: {\n            content: '<div class=\"user-location-marker\"></div>',\n            anchor: new window.naver.maps.Point(15, 15)\n          },\n          title: '내 위치'\n        });\n\n        // 사용자 위치로 지도 중심 이동 (검색 결과가 없을 때만)\n        if (!searchResult) {\n          map.setCenter(new window.naver.maps.LatLng(userLocation.lat, userLocation.lng));\n          map.setZoom(16);\n        }\n      }\n\n      // ✅ 검색 결과가 있을 때 지도 업데이트\n      if (searchResult) {\n        // 길찾기 결과 처리\n        if (searchResult.type === 'directions' && searchResult.path) {\n          var _searchResult$summary, _searchResult$summary2, _searchResult$summary3;\n          // 경로 좌표 변환\n          const path = searchResult.path.map(([lng, lat]) => new window.naver.maps.LatLng(lat, lng));\n\n          // 출발지 마커\n          new window.naver.maps.Marker({\n            position: path[0],\n            map,\n            icon: {\n              content: `<div class=\"marker start\">\n                <span>${((_searchResult$summary = searchResult.summary) === null || _searchResult$summary === void 0 ? void 0 : _searchResult$summary.start_name) || '출발'}</span>\n              </div>`,\n              anchor: new window.naver.maps.Point(15, 31)\n            }\n          });\n\n          // 도착지 마커\n          new window.naver.maps.Marker({\n            position: path[path.length - 1],\n            map,\n            icon: {\n              content: `<div class=\"marker end\">\n                <span>${((_searchResult$summary2 = searchResult.summary) === null || _searchResult$summary2 === void 0 ? void 0 : _searchResult$summary2.end_name) || '도착'}</span>\n              </div>`,\n              anchor: new window.naver.maps.Point(15, 31)\n            }\n          });\n\n          // 경로선 그리기\n          new window.naver.maps.Polyline({\n            path: path,\n            strokeColor: '#FF0000',\n            strokeWeight: 8,\n            strokeOpacity: 0.8,\n            strokeLineCap: 'round',\n            strokeLineJoin: 'round',\n            map: map\n          });\n\n          // 경로가 모두 보이도록 지도 영역 조정\n          const bounds = new window.naver.maps.LatLngBounds();\n          path.forEach(coord => bounds.extend(coord));\n\n          // 경로 주변에 충분한 여유 공간을 두기 위해 패딩 값 증가\n          const padding = {\n            top: 100,\n            right: 100,\n            bottom: 100,\n            left: 100\n          };\n          map.fitBounds(bounds, padding);\n\n          // 경로가 더 잘 보이도록 줌 레벨 즉시 조정\n          const distance = ((_searchResult$summary3 = searchResult.summary) === null || _searchResult$summary3 === void 0 ? void 0 : _searchResult$summary3.distance) || 0;\n          let targetZoom;\n\n          // 거리에 따른 적절한 줌 레벨 설정\n          if (distance < 500) {\n            // 500m 미만\n            targetZoom = 16;\n          } else if (distance < 1000) {\n            // 1km 미만\n            targetZoom = 15;\n          } else if (distance < 2000) {\n            // 2km 미만\n            targetZoom = 14;\n          } else if (distance < 5000) {\n            // 5km 미만\n            targetZoom = 13;\n          } else {\n            // 5km 이상\n            targetZoom = 12;\n          }\n\n          // 약간의 지연 후 줌 레벨 적용 (fitBounds 완료 후)\n          setTimeout(() => {\n            const currentZoom = map.getZoom();\n            if (currentZoom > targetZoom) {\n              map.setZoom(targetZoom);\n            }\n          }, 200);\n        }\n        // 일반 장소 검색 결과 처리\n        else if (searchResult.type === 'places' && searchResult.places) {\n          const bounds = new window.naver.maps.LatLngBounds();\n          searchResult.places.forEach(place => {\n            const position = new window.naver.maps.LatLng(place.y, place.x);\n            bounds.extend(position);\n            new window.naver.maps.Marker({\n              position: position,\n              map: map,\n              icon: {\n                content: `<div class=\"marker place\">${place.name}</div>`,\n                anchor: new window.naver.maps.Point(15, 31)\n              }\n            });\n          });\n          map.fitBounds(bounds);\n        }\n      }\n    } catch (error) {\n      console.error('지도 초기화 중 오류 발생:', error);\n    }\n  }, [isMapLoaded, searchResult, userLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    style: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      ref: mapRef,\n      className: \"naver-map\",\n      children: !isMapLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC9C0\\uB3C4 \\uB85C\\uB529 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this) : !searchResult && !userLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uB124\\uC774\\uBC84 \\uC9C0\\uB3C4 \\uAC80\\uC0C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC624\\uB978\\uCABD \\uCC44\\uD305\\uCC3D\\uC5D0 \\uC7A5\\uC18C \\uC774\\uB984\\uC774\\uB098 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC704\\uCE58 \\uAE30\\uBC18 \\uAC80\\uC0C9\\uC744 \\uC704\\uD574 \\uC704\\uCE58 \\uC815\\uBCF4 \\uACF5\\uC720\\uB97C \\uD5C8\\uC6A9\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), (searchResult === null || searchResult === void 0 ? void 0 : searchResult.type) === 'directions' && searchResult.summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"directions-info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDE97 \\uAC70\\uB9AC: \", (searchResult.summary.distance / 1000).toFixed(2), \" km | \\uD83D\\uDD52 \\uC18C\\uC694 \\uC2DC\\uAC04: \", Math.round(searchResult.summary.duration / 60000), \" \\uBD84\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverMap, \"6ynSb1omr6xp0kTOizY/GTM+FiI=\");\n_c = NaverMap;\nexport default NaverMap;\nvar _c;\n$RefreshReg$(_c, \"NaverMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","NaverMap","searchResult","userLocation","_s","mapRef","isMapLoaded","setIsMapLoaded","checkMapLoad","window","naver","maps","setTimeout","current","console","log","mapOptions","center","LatLng","zoom","mapTypeControl","mapTypeId","MapTypeId","NORMAL","map","Map","Marker","position","lat","lng","icon","content","anchor","Point","title","setCenter","setZoom","type","path","_searchResult$summary","_searchResult$summary2","_searchResult$summary3","summary","start_name","length","end_name","Polyline","strokeColor","strokeWeight","strokeOpacity","strokeLineCap","strokeLineJoin","bounds","LatLngBounds","forEach","coord","extend","padding","top","right","bottom","left","fitBounds","distance","targetZoom","currentZoom","getZoom","places","place","y","x","name","error","className","style","height","children","id","ref","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","Math","round","duration","_c","$RefreshReg$"],"sources":["C:/Users/haenee/Desktop/naver-map-chat/frontend/src/components/NaverMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './NaverMap.css';\r\nimport './DirectionsSearch.css';\r\nimport './DirectionsResult.css';\r\n\r\nconst NaverMap = ({ searchResult, userLocation }) => {\r\n  const mapRef = useRef(null);\r\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\r\n\r\n  // 네이버 지도 API 로드 확인\r\n  useEffect(() => {\r\n    const checkMapLoad = () => {\r\n      if (window.naver && window.naver.maps) {\r\n        setIsMapLoaded(true);\r\n      } else {\r\n        setTimeout(checkMapLoad, 100);\r\n      }\r\n    };\r\n    checkMapLoad();\r\n  }, []);\r\n\r\n  // 지도 초기화\r\n  useEffect(() => {\r\n    if (!isMapLoaded || !mapRef.current || !window.naver || !window.naver.maps) return;\r\n\r\n    try {\r\n      console.log('✅ 네이버 지도 API 로드 성공');\r\n\r\n      // ✅ 지도 생성\r\n      const mapOptions = {\r\n        center: new window.naver.maps.LatLng(37.5665, 126.9780),\r\n        zoom: 14,\r\n        mapTypeControl: false,\r\n        mapTypeId: window.naver.maps.MapTypeId.NORMAL\r\n      };\r\n\r\n      const map = new window.naver.maps.Map(mapRef.current, mapOptions);\r\n\r\n      // ✅ 사용자 위치 마커 표시\r\n      if (userLocation) {\r\n        new window.naver.maps.Marker({\r\n          position: new window.naver.maps.LatLng(userLocation.lat, userLocation.lng),\r\n          map: map,\r\n          icon: {\r\n            content: '<div class=\"user-location-marker\"></div>',\r\n            anchor: new window.naver.maps.Point(15, 15)\r\n          },\r\n          title: '내 위치'\r\n        });\r\n\r\n        // 사용자 위치로 지도 중심 이동 (검색 결과가 없을 때만)\r\n        if (!searchResult) {\r\n          map.setCenter(new window.naver.maps.LatLng(userLocation.lat, userLocation.lng));\r\n          map.setZoom(16);\r\n        }\r\n      }\r\n\r\n      // ✅ 검색 결과가 있을 때 지도 업데이트\r\n      if (searchResult) {\r\n        // 길찾기 결과 처리\r\n        if (searchResult.type === 'directions' && searchResult.path) {\r\n          // 경로 좌표 변환\r\n          const path = searchResult.path.map(([lng, lat]) => \r\n            new window.naver.maps.LatLng(lat, lng)\r\n          );\r\n\r\n          // 출발지 마커\r\n          new window.naver.maps.Marker({\r\n            position: path[0],\r\n            map,\r\n            icon: {\r\n              content: `<div class=\"marker start\">\r\n                <span>${searchResult.summary?.start_name || '출발'}</span>\r\n              </div>`,\r\n              anchor: new window.naver.maps.Point(15, 31)\r\n            }\r\n          });\r\n\r\n          // 도착지 마커\r\n          new window.naver.maps.Marker({\r\n            position: path[path.length - 1],\r\n            map,\r\n            icon: {\r\n              content: `<div class=\"marker end\">\r\n                <span>${searchResult.summary?.end_name || '도착'}</span>\r\n              </div>`,\r\n              anchor: new window.naver.maps.Point(15, 31)\r\n            }\r\n          });\r\n\r\n          // 경로선 그리기\r\n          new window.naver.maps.Polyline({\r\n            path: path,\r\n            strokeColor: '#FF0000',\r\n            strokeWeight: 8,\r\n            strokeOpacity: 0.8,\r\n            strokeLineCap: 'round',\r\n            strokeLineJoin: 'round',\r\n            map: map\r\n          });\r\n\r\n          // 경로가 모두 보이도록 지도 영역 조정\r\n          const bounds = new window.naver.maps.LatLngBounds();\r\n          path.forEach(coord => bounds.extend(coord));\r\n          \r\n          // 경로 주변에 충분한 여유 공간을 두기 위해 패딩 값 증가\r\n          const padding = { \r\n            top: 100, \r\n            right: 100, \r\n            bottom: 100, \r\n            left: 100 \r\n          };\r\n          map.fitBounds(bounds, padding);\r\n          \r\n          // 경로가 더 잘 보이도록 줌 레벨 즉시 조정\r\n          const distance = searchResult.summary?.distance || 0;\r\n          let targetZoom;\r\n          \r\n          // 거리에 따른 적절한 줌 레벨 설정\r\n          if (distance < 500) { // 500m 미만\r\n            targetZoom = 16;\r\n          } else if (distance < 1000) { // 1km 미만\r\n            targetZoom = 15;\r\n          } else if (distance < 2000) { // 2km 미만\r\n            targetZoom = 14;\r\n          } else if (distance < 5000) { // 5km 미만\r\n            targetZoom = 13;\r\n          } else { // 5km 이상\r\n            targetZoom = 12;\r\n          }\r\n          \r\n          // 약간의 지연 후 줌 레벨 적용 (fitBounds 완료 후)\r\n          setTimeout(() => {\r\n            const currentZoom = map.getZoom();\r\n            if (currentZoom > targetZoom) {\r\n              map.setZoom(targetZoom);\r\n            }\r\n          }, 200);\r\n        }\r\n        // 일반 장소 검색 결과 처리\r\n        else if (searchResult.type === 'places' && searchResult.places) {\r\n          const bounds = new window.naver.maps.LatLngBounds();\r\n          \r\n          searchResult.places.forEach(place => {\r\n            const position = new window.naver.maps.LatLng(place.y, place.x);\r\n            bounds.extend(position);\r\n            \r\n            new window.naver.maps.Marker({\r\n              position: position,\r\n              map: map,\r\n              icon: {\r\n                content: `<div class=\"marker place\">${place.name}</div>`,\r\n                anchor: new window.naver.maps.Point(15, 31)\r\n              }\r\n            });\r\n          });\r\n          \r\n          map.fitBounds(bounds);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('지도 초기화 중 오류 발생:', error);\r\n    }\r\n  }, [isMapLoaded, searchResult, userLocation]);\r\n\r\n  return (\r\n    <div className=\"map-container\" style={{ height: '100vh' }}>\r\n      <div id=\"map\" ref={mapRef} className=\"naver-map\">\r\n        {!isMapLoaded ? (\r\n          <div className=\"map-overlay\">\r\n            <div className=\"map-instructions\">\r\n              <h2>지도 로딩 중...</h2>\r\n              <p>잠시만 기다려주세요.</p>\r\n            </div>\r\n          </div>\r\n        ) : !searchResult && !userLocation && (\r\n          <div className=\"map-overlay\">\r\n            <div className=\"map-instructions\">\r\n              <h2>네이버 지도 검색</h2>\r\n              <p>오른쪽 채팅창에 장소 이름이나 주소를 입력하세요</p>\r\n              <p>위치 기반 검색을 위해 위치 정보 공유를 허용해주세요</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* ✅ 길찾기 결과일 경우 거리 및 시간 정보 출력 */}\r\n      {searchResult?.type === 'directions' && searchResult.summary && (\r\n        <div className=\"directions-info\">\r\n          <p>\r\n            🚗 거리: {(searchResult.summary.distance / 1000).toFixed(2)} km\r\n            | 🕒 소요 시간: {Math.round(searchResult.summary.duration / 60000)} 분\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}