{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haenee\\\\Desktop\\\\naver-map-chat\\\\frontend\\\\src\\\\components\\\\NaverMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport './NaverMap.css';\nimport DirectionsSearch from './DirectionsSearch';\nimport DirectionsResult from './DirectionsResult';\nimport './DirectionsSearch.css';\nimport './DirectionsResult.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverMap = ({\n  searchResult,\n  userLocation\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  const userMarkerRef = useRef(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [mapError, setMapError] = useState(null);\n\n  // 길찾기 관련 상태\n  const [directions, setDirections] = useState(null);\n  const [directionsPolyline, setDirectionsPolyline] = useState(null);\n  const [showDirectionsPanel, setShowDirectionsPanel] = useState(false);\n  const [directionsMarkers, setDirectionsMarkers] = useState([]);\n  const polylineRef = useRef(null);\n\n  // 경로 지우기\n  const clearDirections = useCallback(() => {\n    if (directionsPolyline) {\n      directionsPolyline.setMap(null);\n      setDirectionsPolyline(null);\n    }\n    directionsMarkers.forEach(marker => {\n      marker.setMap(null);\n    });\n    setDirectionsMarkers([]);\n    if (polylineRef.current) {\n      polylineRef.current.setMap(null);\n      polylineRef.current = null;\n    }\n  }, [directionsPolyline, directionsMarkers]);\n\n  // 길찾기 검색 처리\n  const handleDirectionsSearch = useCallback(async (start, end) => {\n    try {\n      // 기존 경로 초기화\n      clearDirections();\n\n      // 길찾기 API 호출\n      const response = await fetch(`/api/directions?start=${encodeURIComponent(start)}&goal=${encodeURIComponent(end)}`);\n      if (!response.ok) {\n        throw new Error('길찾기 검색에 실패했습니다.');\n      }\n      const data = await response.json();\n      if (data.code === 0 && data.route) {\n        setDirections(data);\n        setShowDirectionsPanel(true);\n      } else {\n        throw new Error(data.message || '경로를 찾을 수 없습니다.');\n      }\n    } catch (error) {\n      console.error('길찾기 검색 중 오류:', error);\n      alert(error.message || '길찾기 검색 중 오류가 발생했습니다.');\n    }\n  }, [clearDirections]);\n\n  // 길찾기 패널 닫기\n  const handleCloseDirections = useCallback(() => {\n    clearDirections();\n    setShowDirectionsPanel(false);\n    setDirections(null);\n  }, [clearDirections]);\n\n  // 사용자 위치 마커 업데이트\n  const updateUserLocationMarker = useCallback(() => {\n    if (!mapInstanceRef.current || !userLocation) return;\n    const position = new window.naver.maps.LatLng(userLocation.lat, userLocation.lng);\n\n    // 이전 사용자 위치 마커 제거\n    if (userMarkerRef.current) {\n      userMarkerRef.current.setMap(null);\n    }\n\n    // 사용자 위치 마커 생성\n    userMarkerRef.current = new window.naver.maps.Marker({\n      position,\n      map: mapInstanceRef.current,\n      icon: {\n        content: '<div class=\"user-location-marker\"></div>',\n        anchor: new window.naver.maps.Point(15, 15)\n      },\n      title: '내 위치'\n    });\n\n    // 검색 결과가 없을 때만 사용자 위치로 지도 이동\n    if (!searchResult && !showDirectionsPanel) {\n      mapInstanceRef.current.setCenter(position);\n      mapInstanceRef.current.setZoom(16);\n    }\n  }, [userLocation, searchResult, showDirectionsPanel]);\n\n  // 지도 결과 업데이트 함수\n  const updateMapWithSearchResult = useEffect(() => {\n    if (!mapInstanceRef.current || !searchResult || !searchResult.type) return;\n    if (searchResult.type === 'directions' && searchResult.path) {\n      var _searchResult$summary, _searchResult$summary2;\n      // 이전 경로와 마커 제거\n      clearDirections();\n\n      // 경로 그리기\n      const path = searchResult.path.map(coords => new window.naver.maps.LatLng(coords[1], coords[0]));\n      const polyline = new window.naver.maps.Polyline({\n        path: path,\n        strokeColor: '#5347AA',\n        strokeWeight: 5,\n        map: mapInstanceRef.current\n      });\n\n      // 출발지 마커\n      const startMarker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(searchResult.start.lat, searchResult.start.lng),\n        map: mapInstanceRef.current,\n        icon: {\n          content: `<div class=\"marker start\">${((_searchResult$summary = searchResult.summary) === null || _searchResult$summary === void 0 ? void 0 : _searchResult$summary.start_name) || '출발'}</div>`,\n          anchor: new window.naver.maps.Point(15, 31)\n        }\n      });\n\n      // 도착지 마커\n      const endMarker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(searchResult.end.lat, searchResult.end.lng),\n        map: mapInstanceRef.current,\n        icon: {\n          content: `<div class=\"marker end\">${((_searchResult$summary2 = searchResult.summary) === null || _searchResult$summary2 === void 0 ? void 0 : _searchResult$summary2.end_name) || '도착'}</div>`,\n          anchor: new window.naver.maps.Point(15, 31)\n        }\n      });\n\n      // 마커와 경로 저장\n      setDirectionsMarkers([startMarker, endMarker]);\n      setDirectionsPolyline(polyline);\n\n      // 경로가 모두 보이도록 지도 영역 조정\n      const bounds = new window.naver.maps.LatLngBounds();\n      path.forEach(coord => bounds.extend(coord));\n      mapInstanceRef.current.fitBounds(bounds);\n    }\n  }, [searchResult, clearDirections]);\n\n  // 초기 맵 로드\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=07gq168p3y`;\n    script.async = true;\n    script.onload = () => {\n      try {\n        if (window.naver && window.naver.maps) {\n          const mapOptions = {\n            center: new window.naver.maps.LatLng(37.3595704, 127.105399),\n            zoom: 15,\n            zoomControl: true,\n            zoomControlOptions: {\n              position: window.naver.maps.Position.TOP_RIGHT\n            }\n          };\n          mapInstanceRef.current = new window.naver.maps.Map(mapRef.current, mapOptions);\n          setMapLoaded(true);\n          console.log(\"네이버 지도가 성공적으로 로드되었습니다.\");\n        } else {\n          console.error(\"네이버 지도 API가 로드되지 않았습니다.\");\n          setMapError(\"지도를 로드할 수 없습니다.\");\n        }\n      } catch (error) {\n        console.error(\"지도 초기화 중 오류:\", error);\n        setMapError(\"지도 초기화 중 오류가 발생했습니다.\");\n      }\n    };\n    script.onerror = e => {\n      console.error(\"네이버 지도 스크립트 로드 실패:\", e);\n      setMapError(\"지도 스크립트를 로드할 수 없습니다. API 키를 확인하세요.\");\n    };\n    document.head.appendChild(script);\n    return () => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n    };\n  }, []);\n\n  // 사용자 위치 변경 시 지도 업데이트\n  useEffect(() => {\n    if (mapLoaded && userLocation) {\n      updateUserLocationMarker();\n    }\n  }, [mapLoaded, userLocation, updateUserLocationMarker]);\n\n  // 검색 결과 변경 시 지도 업데이트\n  useEffect(() => {\n    if (mapLoaded && searchResult) {\n      updateMapWithSearchResult();\n    }\n  }, [mapLoaded, searchResult, updateMapWithSearchResult]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"naver-map\",\n      id: \"map\",\n      children: [!searchResult && !userLocation && !mapError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uB124\\uC774\\uBC84 \\uC9C0\\uB3C4 \\uAC80\\uC0C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC624\\uB978\\uCABD \\uCC44\\uD305\\uCC3D\\uC5D0 \\uC7A5\\uC18C \\uC774\\uB984\\uC774\\uB098 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC704\\uCE58 \\uAE30\\uBC18 \\uAC80\\uC0C9\\uC744 \\uC704\\uD574 \\uC704\\uCE58 \\uC815\\uBCF4 \\uACF5\\uC720\\uB97C \\uD5C8\\uC6A9\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), mapError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-error-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC9C0\\uB3C4 \\uB85C\\uB4DC \\uC624\\uB958\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: mapError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"directions-container\",\n      children: /*#__PURE__*/_jsxDEV(DirectionsSearch, {\n        onSearch: handleDirectionsSearch,\n        userLocation: userLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), showDirectionsPanel && directions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"directions-panel\",\n      children: /*#__PURE__*/_jsxDEV(DirectionsResult, {\n        directions: directions,\n        onClose: handleCloseDirections\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverMap, \"/yTWnebkCCSIyx0paqCIX0rPQIM=\");\n_c = NaverMap;\nexport default NaverMap;\nvar _c;\n$RefreshReg$(_c, \"NaverMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","DirectionsSearch","DirectionsResult","jsxDEV","_jsxDEV","NaverMap","searchResult","userLocation","_s","mapRef","mapInstanceRef","markerRef","userMarkerRef","mapLoaded","setMapLoaded","mapError","setMapError","directions","setDirections","directionsPolyline","setDirectionsPolyline","showDirectionsPanel","setShowDirectionsPanel","directionsMarkers","setDirectionsMarkers","polylineRef","clearDirections","setMap","forEach","marker","current","handleDirectionsSearch","start","end","response","fetch","encodeURIComponent","ok","Error","data","json","code","route","message","error","console","alert","handleCloseDirections","updateUserLocationMarker","position","window","naver","maps","LatLng","lat","lng","Marker","map","icon","content","anchor","Point","title","setCenter","setZoom","updateMapWithSearchResult","type","path","_searchResult$summary","_searchResult$summary2","coords","polyline","Polyline","strokeColor","strokeWeight","startMarker","summary","start_name","endMarker","end_name","bounds","LatLngBounds","coord","extend","fitBounds","script","document","createElement","src","async","onload","mapOptions","center","zoom","zoomControl","zoomControlOptions","Position","TOP_RIGHT","Map","log","onerror","e","head","appendChild","parentNode","removeChild","className","children","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onClose","_c","$RefreshReg$"],"sources":["C:/Users/haenee/Desktop/naver-map-chat/frontend/src/components/NaverMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport './NaverMap.css';\r\nimport DirectionsSearch from './DirectionsSearch';\r\nimport DirectionsResult from './DirectionsResult';\r\nimport './DirectionsSearch.css';\r\nimport './DirectionsResult.css';\r\n\r\nconst NaverMap = ({ searchResult, userLocation }) => {\r\n  const mapRef = useRef(null);\r\n  const mapInstanceRef = useRef(null);\r\n  const markerRef = useRef(null);\r\n  const userMarkerRef = useRef(null);\r\n  const [mapLoaded, setMapLoaded] = useState(false);\r\n  const [mapError, setMapError] = useState(null);\r\n  \r\n  // 길찾기 관련 상태\r\n  const [directions, setDirections] = useState(null);\r\n  const [directionsPolyline, setDirectionsPolyline] = useState(null);\r\n  const [showDirectionsPanel, setShowDirectionsPanel] = useState(false);\r\n  const [directionsMarkers, setDirectionsMarkers] = useState([]);\r\n  const polylineRef = useRef(null);\r\n\r\n  // 경로 지우기\r\n  const clearDirections = useCallback(() => {\r\n    if (directionsPolyline) {\r\n      directionsPolyline.setMap(null);\r\n      setDirectionsPolyline(null);\r\n    }\r\n    \r\n    directionsMarkers.forEach(marker => {\r\n      marker.setMap(null);\r\n    });\r\n    setDirectionsMarkers([]);\r\n\r\n    if (polylineRef.current) {\r\n      polylineRef.current.setMap(null);\r\n      polylineRef.current = null;\r\n    }\r\n  }, [directionsPolyline, directionsMarkers]);\r\n\r\n  // 길찾기 검색 처리\r\n  const handleDirectionsSearch = useCallback(async (start, end) => {\r\n    try {\r\n      // 기존 경로 초기화\r\n      clearDirections();\r\n      \r\n      // 길찾기 API 호출\r\n      const response = await fetch(`/api/directions?start=${encodeURIComponent(start)}&goal=${encodeURIComponent(end)}`);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('길찾기 검색에 실패했습니다.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.code === 0 && data.route) {\r\n        setDirections(data);\r\n        setShowDirectionsPanel(true);\r\n      } else {\r\n        throw new Error(data.message || '경로를 찾을 수 없습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('길찾기 검색 중 오류:', error);\r\n      alert(error.message || '길찾기 검색 중 오류가 발생했습니다.');\r\n    }\r\n  }, [clearDirections]);\r\n\r\n  // 길찾기 패널 닫기\r\n  const handleCloseDirections = useCallback(() => {\r\n    clearDirections();\r\n    setShowDirectionsPanel(false);\r\n    setDirections(null);\r\n  }, [clearDirections]);\r\n\r\n  // 사용자 위치 마커 업데이트\r\n  const updateUserLocationMarker = useCallback(() => {\r\n    if (!mapInstanceRef.current || !userLocation) return;\r\n    \r\n    const position = new window.naver.maps.LatLng(userLocation.lat, userLocation.lng);\r\n    \r\n    // 이전 사용자 위치 마커 제거\r\n    if (userMarkerRef.current) {\r\n      userMarkerRef.current.setMap(null);\r\n    }\r\n    \r\n    // 사용자 위치 마커 생성\r\n    userMarkerRef.current = new window.naver.maps.Marker({\r\n      position,\r\n      map: mapInstanceRef.current,\r\n      icon: {\r\n        content: '<div class=\"user-location-marker\"></div>',\r\n        anchor: new window.naver.maps.Point(15, 15)\r\n      },\r\n      title: '내 위치'\r\n    });\r\n    \r\n    // 검색 결과가 없을 때만 사용자 위치로 지도 이동\r\n    if (!searchResult && !showDirectionsPanel) {\r\n      mapInstanceRef.current.setCenter(position);\r\n      mapInstanceRef.current.setZoom(16);\r\n    }\r\n  }, [userLocation, searchResult, showDirectionsPanel]);\r\n\r\n  // 지도 결과 업데이트 함수\r\n  const updateMapWithSearchResult = useEffect(() => {\r\n    if (!mapInstanceRef.current || !searchResult || !searchResult.type) return;\r\n\r\n    if (searchResult.type === 'directions' && searchResult.path) {\r\n      // 이전 경로와 마커 제거\r\n      clearDirections();\r\n\r\n      // 경로 그리기\r\n      const path = searchResult.path.map(coords => \r\n        new window.naver.maps.LatLng(coords[1], coords[0])\r\n      );\r\n\r\n      const polyline = new window.naver.maps.Polyline({\r\n        path: path,\r\n        strokeColor: '#5347AA',\r\n        strokeWeight: 5,\r\n        map: mapInstanceRef.current\r\n      });\r\n\r\n      // 출발지 마커\r\n      const startMarker = new window.naver.maps.Marker({\r\n        position: new window.naver.maps.LatLng(searchResult.start.lat, searchResult.start.lng),\r\n        map: mapInstanceRef.current,\r\n        icon: {\r\n          content: `<div class=\"marker start\">${searchResult.summary?.start_name || '출발'}</div>`,\r\n          anchor: new window.naver.maps.Point(15, 31)\r\n        }\r\n      });\r\n\r\n      // 도착지 마커\r\n      const endMarker = new window.naver.maps.Marker({\r\n        position: new window.naver.maps.LatLng(searchResult.end.lat, searchResult.end.lng),\r\n        map: mapInstanceRef.current,\r\n        icon: {\r\n          content: `<div class=\"marker end\">${searchResult.summary?.end_name || '도착'}</div>`,\r\n          anchor: new window.naver.maps.Point(15, 31)\r\n        }\r\n      });\r\n\r\n      // 마커와 경로 저장\r\n      setDirectionsMarkers([startMarker, endMarker]);\r\n      setDirectionsPolyline(polyline);\r\n\r\n      // 경로가 모두 보이도록 지도 영역 조정\r\n      const bounds = new window.naver.maps.LatLngBounds();\r\n      path.forEach(coord => bounds.extend(coord));\r\n      mapInstanceRef.current.fitBounds(bounds);\r\n    }\r\n  }, [searchResult, clearDirections]);\r\n\r\n  // 초기 맵 로드\r\n  useEffect(() => {\r\n    const script = document.createElement('script');\r\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=07gq168p3y`;\r\n    script.async = true;\r\n    \r\n    script.onload = () => {\r\n      try {\r\n        if (window.naver && window.naver.maps) {\r\n          const mapOptions = {\r\n            center: new window.naver.maps.LatLng(37.3595704, 127.105399),\r\n            zoom: 15,\r\n            zoomControl: true,\r\n            zoomControlOptions: {\r\n              position: window.naver.maps.Position.TOP_RIGHT\r\n            }\r\n          };\r\n\r\n          mapInstanceRef.current = new window.naver.maps.Map(mapRef.current, mapOptions);\r\n          setMapLoaded(true);\r\n          console.log(\"네이버 지도가 성공적으로 로드되었습니다.\");\r\n        } else {\r\n          console.error(\"네이버 지도 API가 로드되지 않았습니다.\");\r\n          setMapError(\"지도를 로드할 수 없습니다.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"지도 초기화 중 오류:\", error);\r\n        setMapError(\"지도 초기화 중 오류가 발생했습니다.\");\r\n      }\r\n    };\r\n    \r\n    script.onerror = (e) => {\r\n      console.error(\"네이버 지도 스크립트 로드 실패:\", e);\r\n      setMapError(\"지도 스크립트를 로드할 수 없습니다. API 키를 확인하세요.\");\r\n    };\r\n    \r\n    document.head.appendChild(script);\r\n\r\n    return () => {\r\n      if (script.parentNode) {\r\n        script.parentNode.removeChild(script);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 사용자 위치 변경 시 지도 업데이트\r\n  useEffect(() => {\r\n    if (mapLoaded && userLocation) {\r\n      updateUserLocationMarker();\r\n    }\r\n  }, [mapLoaded, userLocation, updateUserLocationMarker]);\r\n\r\n  // 검색 결과 변경 시 지도 업데이트\r\n  useEffect(() => {\r\n    if (mapLoaded && searchResult) {\r\n      updateMapWithSearchResult();\r\n    }\r\n  }, [mapLoaded, searchResult, updateMapWithSearchResult]);\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <div ref={mapRef} className=\"naver-map\" id=\"map\">\r\n        {!searchResult && !userLocation && !mapError && (\r\n          <div className=\"map-overlay\">\r\n            <div className=\"map-instructions\">\r\n              <h2>네이버 지도 검색</h2>\r\n              <p>오른쪽 채팅창에 장소 이름이나 주소를 입력하세요</p>\r\n              <p>위치 기반 검색을 위해 위치 정보 공유를 허용해주세요</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {mapError && (\r\n          <div className=\"map-error-overlay\">\r\n            <div className=\"map-error\">\r\n              <h2>지도 로드 오류</h2>\r\n              <p>{mapError}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"directions-container\">\r\n        <DirectionsSearch \r\n          onSearch={handleDirectionsSearch} \r\n          userLocation={userLocation}\r\n        />\r\n      </div>\r\n      \r\n      {showDirectionsPanel && directions && (\r\n        <div className=\"directions-panel\">\r\n          <DirectionsResult \r\n            directions={directions} \r\n            onClose={handleCloseDirections}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}