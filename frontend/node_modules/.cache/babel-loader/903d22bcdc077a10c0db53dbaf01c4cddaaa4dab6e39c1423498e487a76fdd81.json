{"ast":null,"code":"var _jsxFileName = \"c:\\\\python\\\\venv\\\\naver-map-chat\\\\frontend\\\\src\\\\components\\\\NaverMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport './NaverMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverMap = ({\n  searchResult\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markerRef = useRef(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [mapError, setMapError] = useState(null);\n\n  // 지도 결과 업데이트 함수 - useCallback으로 감싸서 의존성 문제 해결\n  const updateMapWithSearchResult = useCallback(() => {\n    if (!searchResult || !mapInstanceRef.current) return;\n    const {\n      x,\n      y,\n      address,\n      query\n    } = searchResult;\n    const position = new window.naver.maps.LatLng(y, x);\n\n    // 지도 중심 이동\n    mapInstanceRef.current.setCenter(position);\n    mapInstanceRef.current.setZoom(16);\n\n    // 이전 마커 제거\n    if (markerRef.current) {\n      markerRef.current.setMap(null);\n    }\n\n    // 새 마커 생성\n    markerRef.current = new window.naver.maps.Marker({\n      position,\n      map: mapInstanceRef.current,\n      title: query\n    });\n\n    // 정보 창 생성\n    const infoWindow = new window.naver.maps.InfoWindow({\n      content: `\n        <div class=\"info-window\">\n          <h3>${query}</h3>\n          <p>${address}</p>\n        </div>\n      `,\n      maxWidth: 300,\n      backgroundColor: \"#fff\",\n      borderColor: \"#5347AA\",\n      borderWidth: 2,\n      anchorSize: new window.naver.maps.Size(10, 10),\n      anchorColor: \"#fff\",\n      pixelOffset: new window.naver.maps.Point(10, -10)\n    });\n\n    // 마커 클릭 시 정보 창 표시\n    window.naver.maps.Event.addListener(markerRef.current, 'click', () => {\n      if (infoWindow.getMap()) {\n        infoWindow.close();\n      } else {\n        infoWindow.open(mapInstanceRef.current, markerRef.current);\n      }\n    });\n\n    // 정보 창 자동 표시\n    infoWindow.open(mapInstanceRef.current, markerRef.current);\n  }, [searchResult]);\n\n  // 초기 맵 로드\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=07gq168p3y`;\n    script.async = true;\n    script.onload = () => {\n      try {\n        // 스크립트가 로드된 후 초기화\n        if (window.naver && window.naver.maps) {\n          const mapOptions = {\n            center: new window.naver.maps.LatLng(37.3595704, 127.105399),\n            zoom: 15,\n            zoomControl: true,\n            zoomControlOptions: {\n              position: window.naver.maps.Position.TOP_RIGHT\n            }\n          };\n          mapInstanceRef.current = new window.naver.maps.Map(mapRef.current, mapOptions);\n          setMapLoaded(true);\n          console.log(\"네이버 지도가 성공적으로 로드되었습니다.\");\n        } else {\n          console.error(\"네이버 지도 API가 로드되지 않았습니다.\");\n          setMapError(\"지도를 로드할 수 없습니다.\");\n        }\n      } catch (error) {\n        console.error(\"지도 초기화 중 오류:\", error);\n        setMapError(\"지도 초기화 중 오류가 발생했습니다.\");\n      }\n    };\n    script.onerror = e => {\n      console.error(\"네이버 지도 스크립트 로드 실패:\", e);\n      setMapError(\"지도 스크립트를 로드할 수 없습니다. API 키를 확인하세요.\");\n    };\n    document.head.appendChild(script);\n    return () => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n    };\n  }, []);\n\n  // 검색 결과가 변경될 때 지도 업데이트\n  useEffect(() => {\n    if (mapLoaded && searchResult) {\n      updateMapWithSearchResult();\n    }\n  }, [mapLoaded, searchResult, updateMapWithSearchResult]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    className: \"naver-map\",\n    id: \"map\",\n    children: [!searchResult && !mapError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uB124\\uC774\\uBC84 \\uC9C0\\uB3C4 \\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC624\\uB978\\uCABD \\uCC44\\uD305\\uCC3D\\uC5D0 \\uC7A5\\uC18C \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), mapError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-error-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC9C0\\uB3C4 \\uB85C\\uB4DC \\uC624\\uB958\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: mapError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverMap, \"FSx2Nm2bLO3FaYHC0Vkg5cUms8A=\");\n_c = NaverMap;\nexport default NaverMap;\nvar _c;\n$RefreshReg$(_c, \"NaverMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","jsxDEV","_jsxDEV","NaverMap","searchResult","_s","mapRef","mapInstanceRef","markerRef","mapLoaded","setMapLoaded","mapError","setMapError","updateMapWithSearchResult","current","x","y","address","query","position","window","naver","maps","LatLng","setCenter","setZoom","setMap","Marker","map","title","infoWindow","InfoWindow","content","maxWidth","backgroundColor","borderColor","borderWidth","anchorSize","Size","anchorColor","pixelOffset","Point","Event","addListener","getMap","close","open","script","document","createElement","src","async","onload","mapOptions","center","zoom","zoomControl","zoomControlOptions","Position","TOP_RIGHT","Map","console","log","error","onerror","e","head","appendChild","parentNode","removeChild","ref","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/python/venv/naver-map-chat/frontend/src/components/NaverMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport './NaverMap.css';\r\n\r\nconst NaverMap = ({ searchResult }) => {\r\n  const mapRef = useRef(null);\r\n  const mapInstanceRef = useRef(null);\r\n  const markerRef = useRef(null);\r\n  const [mapLoaded, setMapLoaded] = useState(false);\r\n  const [mapError, setMapError] = useState(null);\r\n\r\n  // 지도 결과 업데이트 함수 - useCallback으로 감싸서 의존성 문제 해결\r\n  const updateMapWithSearchResult = useCallback(() => {\r\n    if (!searchResult || !mapInstanceRef.current) return;\r\n\r\n    const { x, y, address, query } = searchResult;\r\n    const position = new window.naver.maps.LatLng(y, x);\r\n    \r\n    // 지도 중심 이동\r\n    mapInstanceRef.current.setCenter(position);\r\n    mapInstanceRef.current.setZoom(16);\r\n\r\n    // 이전 마커 제거\r\n    if (markerRef.current) {\r\n      markerRef.current.setMap(null);\r\n    }\r\n\r\n    // 새 마커 생성\r\n    markerRef.current = new window.naver.maps.Marker({\r\n      position,\r\n      map: mapInstanceRef.current,\r\n      title: query\r\n    });\r\n\r\n    // 정보 창 생성\r\n    const infoWindow = new window.naver.maps.InfoWindow({\r\n      content: `\r\n        <div class=\"info-window\">\r\n          <h3>${query}</h3>\r\n          <p>${address}</p>\r\n        </div>\r\n      `,\r\n      maxWidth: 300,\r\n      backgroundColor: \"#fff\",\r\n      borderColor: \"#5347AA\",\r\n      borderWidth: 2,\r\n      anchorSize: new window.naver.maps.Size(10, 10),\r\n      anchorColor: \"#fff\",\r\n      pixelOffset: new window.naver.maps.Point(10, -10)\r\n    });\r\n\r\n    // 마커 클릭 시 정보 창 표시\r\n    window.naver.maps.Event.addListener(markerRef.current, 'click', () => {\r\n      if (infoWindow.getMap()) {\r\n        infoWindow.close();\r\n      } else {\r\n        infoWindow.open(mapInstanceRef.current, markerRef.current);\r\n      }\r\n    });\r\n\r\n    // 정보 창 자동 표시\r\n    infoWindow.open(mapInstanceRef.current, markerRef.current);\r\n  }, [searchResult]);\r\n\r\n  // 초기 맵 로드\r\n  useEffect(() => {\r\n    const script = document.createElement('script');\r\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=07gq168p3y`;\r\n    script.async = true;\r\n    \r\n    script.onload = () => {\r\n      try {\r\n        // 스크립트가 로드된 후 초기화\r\n        if (window.naver && window.naver.maps) {\r\n          const mapOptions = {\r\n            center: new window.naver.maps.LatLng(37.3595704, 127.105399),\r\n            zoom: 15,\r\n            zoomControl: true,\r\n            zoomControlOptions: {\r\n              position: window.naver.maps.Position.TOP_RIGHT\r\n            }\r\n          };\r\n\r\n          mapInstanceRef.current = new window.naver.maps.Map(mapRef.current, mapOptions);\r\n          setMapLoaded(true);\r\n          console.log(\"네이버 지도가 성공적으로 로드되었습니다.\");\r\n        } else {\r\n          console.error(\"네이버 지도 API가 로드되지 않았습니다.\");\r\n          setMapError(\"지도를 로드할 수 없습니다.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"지도 초기화 중 오류:\", error);\r\n        setMapError(\"지도 초기화 중 오류가 발생했습니다.\");\r\n      }\r\n    };\r\n    \r\n    script.onerror = (e) => {\r\n      console.error(\"네이버 지도 스크립트 로드 실패:\", e);\r\n      setMapError(\"지도 스크립트를 로드할 수 없습니다. API 키를 확인하세요.\");\r\n    };\r\n    \r\n    document.head.appendChild(script);\r\n\r\n    return () => {\r\n      if (script.parentNode) {\r\n        script.parentNode.removeChild(script);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 검색 결과가 변경될 때 지도 업데이트\r\n  useEffect(() => {\r\n    if (mapLoaded && searchResult) {\r\n      updateMapWithSearchResult();\r\n    }\r\n  }, [mapLoaded, searchResult, updateMapWithSearchResult]);\r\n\r\n  return (\r\n    <div ref={mapRef} className=\"naver-map\" id=\"map\">\r\n      {!searchResult && !mapError && (\r\n        <div className=\"map-overlay\">\r\n          <div className=\"map-instructions\">\r\n            <h2>네이버 지도 검색</h2>\r\n            <p>오른쪽 채팅창에 장소 이름을 입력하세요</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {mapError && (\r\n        <div className=\"map-error-overlay\">\r\n          <div className=\"map-error\">\r\n            <h2>지도 로드 오류</h2>\r\n            <p>{mapError}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}