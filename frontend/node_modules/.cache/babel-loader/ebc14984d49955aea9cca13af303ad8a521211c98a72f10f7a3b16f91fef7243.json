{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haenee\\\\Desktop\\\\naver-map-chat\\\\frontend\\\\src\\\\components\\\\NaverMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './NaverMap.css';\nimport './DirectionsSearch.css';\nimport './DirectionsResult.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverMap = ({\n  searchResult,\n  userLocation\n}) => {\n  _s();\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [mapError, setMapError] = useState(null);\n  const mapInstanceRef = useRef(null);\n  const userMarkerRef = useRef(null);\n\n  // 길찾기 관련 상태\n  const [directionsPolyline, setDirectionsPolyline] = useState(null);\n  const [directionsMarkers, setDirectionsMarkers] = useState([]);\n\n  // 경로 지우기\n  const clearDirections = () => {\n    if (directionsPolyline) {\n      directionsPolyline.setMap(null);\n      setDirectionsPolyline(null);\n    }\n    directionsMarkers.forEach(marker => {\n      marker.setMap(null);\n    });\n    setDirectionsMarkers([]);\n  };\n\n  // 초기 맵 로드\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=07gq168p3y`;\n    script.async = true;\n    script.onload = () => {\n      try {\n        if (window.naver && window.naver.maps) {\n          const mapOptions = {\n            center: new window.naver.maps.LatLng(37.5665, 126.9780),\n            // 서울 시청 좌표\n            zoom: 15,\n            zoomControl: true,\n            zoomControlOptions: {\n              position: window.naver.maps.Position.TOP_RIGHT\n            }\n          };\n          mapInstanceRef.current = new window.naver.maps.Map('map', mapOptions);\n          setMapLoaded(true);\n          console.log(\"네이버 지도가 성공적으로 로드되었습니다.\");\n        } else {\n          console.error(\"네이버 지도 API가 로드되지 않았습니다.\");\n          setMapError(\"지도를 로드할 수 없습니다.\");\n        }\n      } catch (error) {\n        console.error(\"지도 초기화 중 오류:\", error);\n        setMapError(\"지도 초기화 중 오류가 발생했습니다.\");\n      }\n    };\n    script.onerror = e => {\n      console.error(\"네이버 지도 스크립트 로드 실패:\", e);\n      setMapError(\"지도 스크립트를 로드할 수 없습니다. API 키를 확인하세요.\");\n    };\n    document.head.appendChild(script);\n    return () => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n    };\n  }, []);\n\n  // 사용자 위치 마커 업데이트\n  useEffect(() => {\n    if (!mapLoaded || !userLocation || !mapInstanceRef.current) return;\n    const position = new window.naver.maps.LatLng(userLocation.lat, userLocation.lng);\n    if (userMarkerRef.current) {\n      userMarkerRef.current.setMap(null);\n    }\n    userMarkerRef.current = new window.naver.maps.Marker({\n      position,\n      map: mapInstanceRef.current,\n      icon: {\n        content: '<div class=\"user-location-marker\"></div>',\n        anchor: new window.naver.maps.Point(15, 15)\n      },\n      title: '내 위치'\n    });\n    if (!searchResult) {\n      mapInstanceRef.current.setCenter(position);\n      mapInstanceRef.current.setZoom(16);\n    }\n  }, [mapLoaded, userLocation, searchResult]);\n\n  // 검색 결과 변경 시 지도 업데이트\n  useEffect(() => {\n    if (!mapLoaded || !searchResult || !searchResult.type || !mapInstanceRef.current) return;\n    if (searchResult.type === 'directions' && searchResult.path) {\n      var _searchResult$summary, _searchResult$summary2;\n      clearDirections();\n      const path = searchResult.path.map(coords => new window.naver.maps.LatLng(coords[1], coords[0]));\n      const polyline = new window.naver.maps.Polyline({\n        path: path,\n        strokeColor: '#5347AA',\n        strokeWeight: 5,\n        map: mapInstanceRef.current\n      });\n      const startMarker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(searchResult.start.lat, searchResult.start.lng),\n        map: mapInstanceRef.current,\n        icon: {\n          content: `<div class=\"marker start\">${((_searchResult$summary = searchResult.summary) === null || _searchResult$summary === void 0 ? void 0 : _searchResult$summary.start_name) || '출발'}</div>`,\n          anchor: new window.naver.maps.Point(15, 31)\n        }\n      });\n      const endMarker = new window.naver.maps.Marker({\n        position: new window.naver.maps.LatLng(searchResult.end.lat, searchResult.end.lng),\n        map: mapInstanceRef.current,\n        icon: {\n          content: `<div class=\"marker end\">${((_searchResult$summary2 = searchResult.summary) === null || _searchResult$summary2 === void 0 ? void 0 : _searchResult$summary2.end_name) || '도착'}</div>`,\n          anchor: new window.naver.maps.Point(15, 31)\n        }\n      });\n      setDirectionsMarkers([startMarker, endMarker]);\n      setDirectionsPolyline(polyline);\n      const bounds = new window.naver.maps.LatLngBounds();\n      path.forEach(coord => bounds.extend(coord));\n      mapInstanceRef.current.fitBounds(bounds);\n    }\n  }, [mapLoaded, searchResult]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      className: \"naver-map\",\n      children: [!searchResult && !userLocation && !mapError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-instructions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uB124\\uC774\\uBC84 \\uC9C0\\uB3C4 \\uAC80\\uC0C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC624\\uB978\\uCABD \\uCC44\\uD305\\uCC3D\\uC5D0 \\uC7A5\\uC18C \\uC774\\uB984\\uC774\\uB098 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC704\\uCE58 \\uAE30\\uBC18 \\uAC80\\uC0C9\\uC744 \\uC704\\uD574 \\uC704\\uCE58 \\uC815\\uBCF4 \\uACF5\\uC720\\uB97C \\uD5C8\\uC6A9\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), mapError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-error-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC9C0\\uB3C4 \\uB85C\\uB4DC \\uC624\\uB958\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: mapError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(NaverMap, \"5QWryXjRK+cEV+njDyRf2KzMI5o=\");\n_c = NaverMap;\nexport default NaverMap;\nvar _c;\n$RefreshReg$(_c, \"NaverMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","NaverMap","searchResult","userLocation","_s","mapLoaded","setMapLoaded","mapError","setMapError","mapInstanceRef","userMarkerRef","directionsPolyline","setDirectionsPolyline","directionsMarkers","setDirectionsMarkers","clearDirections","setMap","forEach","marker","script","document","createElement","src","async","onload","window","naver","maps","mapOptions","center","LatLng","zoom","zoomControl","zoomControlOptions","position","Position","TOP_RIGHT","current","Map","console","log","error","onerror","e","head","appendChild","parentNode","removeChild","lat","lng","Marker","map","icon","content","anchor","Point","title","setCenter","setZoom","type","path","_searchResult$summary","_searchResult$summary2","coords","polyline","Polyline","strokeColor","strokeWeight","startMarker","start","summary","start_name","endMarker","end","end_name","bounds","LatLngBounds","coord","extend","fitBounds","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/haenee/Desktop/naver-map-chat/frontend/src/components/NaverMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './NaverMap.css';\r\nimport './DirectionsSearch.css';\r\nimport './DirectionsResult.css';\r\n\r\nconst NaverMap = ({ searchResult, userLocation }) => {\r\n  const [mapLoaded, setMapLoaded] = useState(false);\r\n  const [mapError, setMapError] = useState(null);\r\n  const mapInstanceRef = useRef(null);\r\n  const userMarkerRef = useRef(null);\r\n  \r\n  // 길찾기 관련 상태\r\n  const [directionsPolyline, setDirectionsPolyline] = useState(null);\r\n  const [directionsMarkers, setDirectionsMarkers] = useState([]);\r\n\r\n  // 경로 지우기\r\n  const clearDirections = () => {\r\n    if (directionsPolyline) {\r\n      directionsPolyline.setMap(null);\r\n      setDirectionsPolyline(null);\r\n    }\r\n    \r\n    directionsMarkers.forEach(marker => {\r\n      marker.setMap(null);\r\n    });\r\n    setDirectionsMarkers([]);\r\n  };\r\n\r\n  // 초기 맵 로드\r\n  useEffect(() => {\r\n    const script = document.createElement('script');\r\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=07gq168p3y`;\r\n    script.async = true;\r\n    \r\n    script.onload = () => {\r\n      try {\r\n        if (window.naver && window.naver.maps) {\r\n          const mapOptions = {\r\n            center: new window.naver.maps.LatLng(37.5665, 126.9780), // 서울 시청 좌표\r\n            zoom: 15,\r\n            zoomControl: true,\r\n            zoomControlOptions: {\r\n              position: window.naver.maps.Position.TOP_RIGHT\r\n            }\r\n          };\r\n\r\n          mapInstanceRef.current = new window.naver.maps.Map('map', mapOptions);\r\n          setMapLoaded(true);\r\n          console.log(\"네이버 지도가 성공적으로 로드되었습니다.\");\r\n        } else {\r\n          console.error(\"네이버 지도 API가 로드되지 않았습니다.\");\r\n          setMapError(\"지도를 로드할 수 없습니다.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"지도 초기화 중 오류:\", error);\r\n        setMapError(\"지도 초기화 중 오류가 발생했습니다.\");\r\n      }\r\n    };\r\n    \r\n    script.onerror = (e) => {\r\n      console.error(\"네이버 지도 스크립트 로드 실패:\", e);\r\n      setMapError(\"지도 스크립트를 로드할 수 없습니다. API 키를 확인하세요.\");\r\n    };\r\n    \r\n    document.head.appendChild(script);\r\n\r\n    return () => {\r\n      if (script.parentNode) {\r\n        script.parentNode.removeChild(script);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // 사용자 위치 마커 업데이트\r\n  useEffect(() => {\r\n    if (!mapLoaded || !userLocation || !mapInstanceRef.current) return;\r\n    \r\n    const position = new window.naver.maps.LatLng(userLocation.lat, userLocation.lng);\r\n    \r\n    if (userMarkerRef.current) {\r\n      userMarkerRef.current.setMap(null);\r\n    }\r\n    \r\n    userMarkerRef.current = new window.naver.maps.Marker({\r\n      position,\r\n      map: mapInstanceRef.current,\r\n      icon: {\r\n        content: '<div class=\"user-location-marker\"></div>',\r\n        anchor: new window.naver.maps.Point(15, 15)\r\n      },\r\n      title: '내 위치'\r\n    });\r\n    \r\n    if (!searchResult) {\r\n      mapInstanceRef.current.setCenter(position);\r\n      mapInstanceRef.current.setZoom(16);\r\n    }\r\n  }, [mapLoaded, userLocation, searchResult]);\r\n\r\n  // 검색 결과 변경 시 지도 업데이트\r\n  useEffect(() => {\r\n    if (!mapLoaded || !searchResult || !searchResult.type || !mapInstanceRef.current) return;\r\n\r\n    if (searchResult.type === 'directions' && searchResult.path) {\r\n      clearDirections();\r\n\r\n      const path = searchResult.path.map(coords => \r\n        new window.naver.maps.LatLng(coords[1], coords[0])\r\n      );\r\n\r\n      const polyline = new window.naver.maps.Polyline({\r\n        path: path,\r\n        strokeColor: '#5347AA',\r\n        strokeWeight: 5,\r\n        map: mapInstanceRef.current\r\n      });\r\n\r\n      const startMarker = new window.naver.maps.Marker({\r\n        position: new window.naver.maps.LatLng(searchResult.start.lat, searchResult.start.lng),\r\n        map: mapInstanceRef.current,\r\n        icon: {\r\n          content: `<div class=\"marker start\">${searchResult.summary?.start_name || '출발'}</div>`,\r\n          anchor: new window.naver.maps.Point(15, 31)\r\n        }\r\n      });\r\n\r\n      const endMarker = new window.naver.maps.Marker({\r\n        position: new window.naver.maps.LatLng(searchResult.end.lat, searchResult.end.lng),\r\n        map: mapInstanceRef.current,\r\n        icon: {\r\n          content: `<div class=\"marker end\">${searchResult.summary?.end_name || '도착'}</div>`,\r\n          anchor: new window.naver.maps.Point(15, 31)\r\n        }\r\n      });\r\n\r\n      setDirectionsMarkers([startMarker, endMarker]);\r\n      setDirectionsPolyline(polyline);\r\n\r\n      const bounds = new window.naver.maps.LatLngBounds();\r\n      path.forEach(coord => bounds.extend(coord));\r\n      mapInstanceRef.current.fitBounds(bounds);\r\n    }\r\n  }, [mapLoaded, searchResult]);\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <div id=\"map\" className=\"naver-map\">\r\n        {!searchResult && !userLocation && !mapError && (\r\n          <div className=\"map-overlay\">\r\n            <div className=\"map-instructions\">\r\n              <h2>네이버 지도 검색</h2>\r\n              <p>오른쪽 채팅창에 장소 이름이나 주소를 입력하세요</p>\r\n              <p>위치 기반 검색을 위해 위치 정보 공유를 허용해주세요</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {mapError && (\r\n          <div className=\"map-error-overlay\">\r\n            <div className=\"map-error\">\r\n              <h2>지도 로드 오류</h2>\r\n              <p>{mapError}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NaverMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}